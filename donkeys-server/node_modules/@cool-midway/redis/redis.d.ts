import { ICoolCache, CoolPlugin, PLUGINSTATUS } from '@cool-midway/core';
import { ILogger } from '@midwayjs/logger';
import { IMidwayApplication } from '@midwayjs/core';
export declare class RedisCacheHandler implements ICoolCache {
    coolPlugin: CoolPlugin;
    app: IMidwayApplication;
    coreLogger: ILogger;
    cache: any;
    private redisConfig;
    init(): Promise<PLUGINSTATUS.NOCONF | PLUGINSTATUS.USABLE | PLUGINSTATUS.UNKNOWNERR>;
    /**
     * 创建连接
     */
    createConnect(): Promise<void>;
    /**
     * 检查状态
     */
    checkStatus(): Promise<PLUGINSTATUS.NOCONF | PLUGINSTATUS.USABLE | PLUGINSTATUS.UNKNOWNERR>;
    keys(pattern?: string): Promise<any>;
    getMode(): string;
    getMetaCache(): any;
    /**
    * 设置缓存
    * @param key 键
    * @param val 值
    * @param ttl 过期时间(单位：秒)
    */
    set(key: string, val: any, ttl?: number): Promise<void>;
    /**
     * 获得缓存
     * @param key 键
     */
    get(key: string): Promise<any>;
    /**
     * 删除键
     * @param key 键
     */
    del(key: string): Promise<void>;
}
