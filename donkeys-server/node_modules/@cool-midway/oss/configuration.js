"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutoConfiguration = void 0;
const decorator_1 = require("@midwayjs/decorator");
const path_1 = require("path");
const oss_1 = require("./oss");
const core_1 = require("@cool-midway/core");
const decorator_2 = require("@midwayjs/decorator");
// @ts-ignore
const config = require("./package.json");
let AutoConfiguration = class AutoConfiguration {
    /**
     * 启动完成
     * @param container
     */
    async onReady(container) {
        await this.coolPlugin.install(oss_1.OssFileHandler, async () => {
            this.coreLogger.info('\x1B[36m [cool:core] midwayjs cool oss component ready \x1B[0m');
        }, core_1.COOL_FILE_KEY);
    }
};
__decorate([
    decorator_2.Logger(),
    __metadata("design:type", Object)
], AutoConfiguration.prototype, "coreLogger", void 0);
__decorate([
    decorator_1.Inject('cool:coolPlugin'),
    __metadata("design:type", core_1.CoolPlugin)
], AutoConfiguration.prototype, "coolPlugin", void 0);
AutoConfiguration = __decorate([
    decorator_1.Configuration({
        // 按照命名规范: midwayjs-cool-空间名
        namespace: config.name.split("/")[1],
        importConfigs: [
            path_1.join(__dirname, 'config')
        ]
    })
], AutoConfiguration);
exports.AutoConfiguration = AutoConfiguration;
//# sourceMappingURL=configuration.js.map