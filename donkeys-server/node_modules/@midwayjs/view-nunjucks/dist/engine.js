"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NunjucksEnvironment = void 0;
const decorator_1 = require("@midwayjs/decorator");
const nunjucks_1 = require("nunjucks");
class MidwayNunjucksEnvironment extends nunjucks_1.Environment {
    constructor(fileLoader, config) {
        super(fileLoader, {
            noCache: config.noCache,
        });
        // http://disse.cting.org/2016/08/02/2016-08-02-sandbox-break-out-nunjucks-template-engine
        const originMemberLookup = nunjucks_1.runtime.memberLookup;
        nunjucks_1.runtime.memberLookup = function (...args) {
            const val = args[1];
            if (val === 'prototype' || val === 'constructor')
                return null;
            return originMemberLookup(...args);
        };
    }
}
let NunjucksEnvironment = class NunjucksEnvironment {
    async init() {
        const coreLogger = this.app.getCoreLogger();
        const viewPaths = this.globalConfig.view.root;
        coreLogger.info('[@midwayjs/view-nunjucks] loading templates from %j', viewPaths);
        const config = this.globalConfig['nunjucks'];
        config.noCache = !config.cache;
        delete config.cache;
        const fileLoader = new nunjucks_1.FileSystemLoader(this.globalConfig.view.root);
        this.nunjucksEnvironment = new MidwayNunjucksEnvironment(fileLoader, config);
    }
    render(name, locals, cb) {
        return this.nunjucksEnvironment.render(name, locals, cb);
    }
    renderString(tpl, locals, opts, cb) {
        return this.nunjucksEnvironment.renderString(tpl, locals, opts, cb);
    }
    addFilter(name, callback) {
        return this.nunjucksEnvironment.addFilter(name, callback);
    }
    getFilter(name) {
        return this.nunjucksEnvironment.getFilter(name);
    }
    hasExtension(name) {
        return this.nunjucksEnvironment.hasExtension(name);
    }
    addGlobal(name, value) {
        return this.nunjucksEnvironment.addGlobal(name, value);
    }
};
__decorate([
    (0, decorator_1.App)(),
    __metadata("design:type", Object)
], NunjucksEnvironment.prototype, "app", void 0);
__decorate([
    (0, decorator_1.Config)(decorator_1.ALL),
    __metadata("design:type", Object)
], NunjucksEnvironment.prototype, "globalConfig", void 0);
__decorate([
    (0, decorator_1.Init)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], NunjucksEnvironment.prototype, "init", null);
NunjucksEnvironment = __decorate([
    (0, decorator_1.Provide)(),
    (0, decorator_1.Scope)(decorator_1.ScopeEnum.Singleton)
], NunjucksEnvironment);
exports.NunjucksEnvironment = NunjucksEnvironment;
//# sourceMappingURL=engine.js.map