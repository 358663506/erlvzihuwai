"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwaggerGenerator = void 0;
const decorator_1 = require("@midwayjs/decorator");
const generator_1 = require("../lib/generator");
const swagger_1 = require("../controller/swagger");
let SwaggerGenerator = class SwaggerGenerator {
    generate() {
        const controllerModules = (0, decorator_1.listModule)(decorator_1.CONTROLLER_KEY);
        const generator = new generator_1.SwaggerMetaGenerator(this.swaggerConfig);
        for (const module of controllerModules) {
            if (module !== swagger_1.SwaggerController) {
                generator.generateController(module);
            }
        }
        return generator.generate();
    }
};
__decorate([
    (0, decorator_1.Config)('swagger'),
    __metadata("design:type", Object)
], SwaggerGenerator.prototype, "swaggerConfig", void 0);
SwaggerGenerator = __decorate([
    (0, decorator_1.Provide)('swaggerGenerator'),
    (0, decorator_1.Scope)(decorator_1.ScopeEnum.Singleton)
], SwaggerGenerator);
exports.SwaggerGenerator = SwaggerGenerator;
//# sourceMappingURL=generator.js.map