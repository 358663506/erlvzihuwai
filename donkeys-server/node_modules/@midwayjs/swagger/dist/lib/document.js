"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwaggerDefinition = exports.SwaggerDocumentParameter = exports.SwaggerDocumentRouter = exports.SwaggerDocumentPaths = exports.SwaggerDocumentTag = exports.SwaggerDocumentInfo = exports.SwaggerDocument = void 0;
function arrayToJSON(arr) {
    if (!arr)
        return;
    return arr.map(el => el.toJSON());
}
function arrayToObject(arr, objectKey) {
    if (!arr)
        return;
    const o = {};
    arr.forEach(el => {
        o[el[objectKey]] = el.toJSON();
    });
    return o;
}
class SwaggerDocument {
    constructor() {
        this.tags = [];
        this.paths = new SwaggerDocumentPaths();
        this.definitions = [];
    }
    addRouter(router) {
        this.paths.routers.push(router);
    }
    toJSON() {
        var _a;
        return {
            openapi: '3.0.0',
            info: (_a = this.info) === null || _a === void 0 ? void 0 : _a.toJSON(),
            host: this.host,
            basePath: this.basePath,
            tags: arrayToJSON(this.tags),
            schemas: this.schemes,
            paths: this.paths.toJSON(),
            components: {
                schemas: arrayToObject(this.definitions, 'name'),
            },
        };
    }
}
exports.SwaggerDocument = SwaggerDocument;
class SwaggerDocumentInfo {
    toJSON() {
        return {
            description: this.description,
            version: this.version,
            title: this.title,
            termsOfService: this.termsOfService,
            contact: this.contact,
            license: this.license,
        };
    }
}
exports.SwaggerDocumentInfo = SwaggerDocumentInfo;
class SwaggerDocumentTag {
    toJSON() {
        return {
            name: this.name,
            description: this.description,
        };
    }
}
exports.SwaggerDocumentTag = SwaggerDocumentTag;
class SwaggerDocumentPaths {
    constructor() {
        this.routers = [];
    }
    toJSON() {
        const routers = {};
        for (const router of this.routers) {
            if (!routers[router.url]) {
                routers[router.url] = {};
            }
            routers[router.url][router.method] = router.toJSON();
        }
        return routers;
    }
}
exports.SwaggerDocumentPaths = SwaggerDocumentPaths;
class SwaggerDocumentRouter {
    constructor(method, url) {
        this.method = method;
        this.url = url;
    }
    toJSON() {
        return {
            tags: this.tags,
            summary: this.summary,
            description: this.description,
            operationId: this.operationId,
            consumes: this.consumes,
            produces: this.produces,
            parameters: arrayToJSON(this.parameters),
            requestBody: this.requestBody,
            responses: this.responses,
        };
    }
}
exports.SwaggerDocumentRouter = SwaggerDocumentRouter;
class SwaggerDocumentParameter {
    toJSON() {
        return {
            in: this.in,
            name: this.name,
            description: this.description,
            required: this.required,
            deprecated: this.deprecated,
            allowEmptyValue: this.allowEmptyValue,
            schema: this.schema,
            example: this.example,
        };
    }
}
exports.SwaggerDocumentParameter = SwaggerDocumentParameter;
class SwaggerDefinition {
    constructor() {
        this.properties = {};
        this.required = [];
    }
    toJSON() {
        return {
            type: this.type,
            properties: this.properties,
            required: this.required.length ? this.required : undefined,
        };
    }
}
exports.SwaggerDefinition = SwaggerDefinition;
//# sourceMappingURL=document.js.map