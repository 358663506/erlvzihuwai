"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const accesstoken_1 = require("@tnwx/accesstoken");
const kits_1 = require("@tnwx/kits");
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 微信门店接口
 */
class PoiApi {
    /**
     * 创建门店
     * @param jsonStr
     * @param accessToken
     */
    static addPoi(jsonStr, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            }
            let url = util.format(this.addPoiUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, jsonStr);
        });
    }
    /**
     * 查询门店信息
     * @param poiId
     * @param accessToken
     */
    static getPoi(poiId, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            }
            let url = util.format(this.getPoiUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                poi_id: poiId
            }));
        });
    }
    /**
     * 查询门店列表
     * @param begin 开始位置，0 即为从第一条开始查询
     * @param limit 返回数据条数，最大允许50，默认为20
     * @param accessToken
     */
    static getPoiList(begin = 0, limit = 20, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            }
            let url = util.format(this.getPoiListUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                begin: begin,
                limit: limit
            }));
        });
    }
    /**
     * 修改门店服务信息
     * @param jsonStr
     * @param accessToken
     */
    static updatePoi(jsonStr, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            }
            let url = util.format(this.updatePoiUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, jsonStr);
        });
    }
    /**
     * 删除门店
     * @param poiId
     * @param accessToken
     */
    static delPoi(poiId, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            }
            let url = util.format(this.delPoiUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                poi_id: poiId
            }));
        });
    }
    /**
     * 门店类目表
     * @param accessToken
     */
    static getWxCategory(accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            }
            let url = util.format(this.getWxCategoryUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpGet(url);
        });
    }
}
exports.PoiApi = PoiApi;
PoiApi.addPoiUrl = 'http://api.weixin.qq.com/cgi-bin/poi/addpoi?access_token=%s';
PoiApi.getPoiUrl = 'http://api.weixin.qq.com/cgi-bin/poi/getpoi?access_token=%s';
PoiApi.getPoiListUrl = 'https://api.weixin.qq.com/cgi-bin/poi/getpoilist?access_token=%s';
PoiApi.updatePoiUrl = 'https://api.weixin.qq.com/cgi-bin/poi/updatepoi?access_token=%s';
PoiApi.delPoiUrl = 'https://api.weixin.qq.com/cgi-bin/poi/delpoi?access_token=%s';
PoiApi.getWxCategoryUrl = 'http://api.weixin.qq.com/cgi-bin/poi/getwxcategory?access_token=%s';
//# sourceMappingURL=PoiApi.js.map