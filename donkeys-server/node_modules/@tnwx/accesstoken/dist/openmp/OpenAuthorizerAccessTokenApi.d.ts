import { AccessToken } from '../AccessToken';
import { ApiConfig } from '../ApiConfig';
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 微信开放平台第三方应用凭证 AccessToken
 */
export declare class OpenAuthorizerAccessTokenApi {
    private static url;
    /**
     * 获取 acces_token
     * 1、先从缓存中获取，如果可用就直接返回
     * 2、如果缓存中的已过期就调用刷新接口来获取新的 acces_token
     *
     * componentAccessToken authorizerRefreshToken 为空时从缓存中获取
     *
     * @param authorizerAppId         授权方 appid
     * @param componentAccessToken    开放平台令牌
     * @param authorizerRefreshToken  刷新令牌
     */
    static getAccessToken(authorizerAppId: string, componentAccessToken?: string, authorizerRefreshToken?: string): Promise<AccessToken>;
    /**
     * 获取可用的 AccessToken
     * @param apiConfig
     * @param authorizerAppId
     */
    private static getAvailableAccessToken;
    /**
     * 获取新的 acces_token 并设置缓存
     * @param apiConfig
     * @param componentAccessToken
     * @param authorizerAppId
     * @param authorizerRefreshToken
     */
    static refreshAccessToken(apiConfig: ApiConfig, componentAccessToken: string, authorizerAppId: string, authorizerRefreshToken: string): Promise<AccessToken>;
}
