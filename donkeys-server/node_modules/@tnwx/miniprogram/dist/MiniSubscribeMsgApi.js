"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const accesstoken_1 = require("@tnwx/accesstoken");
const util = require("util");
const kits_1 = require("@tnwx/kits");
const commons_1 = require("@tnwx/commons");
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 小程序订阅消息相关 API
 */
class MiniSubscribeMsgApi {
    /**
     * 组合模板并添加至帐号下的个人模板库
     * @param tid 模板标题 id
     * @param kidList 开发者自行组合好的模板关键词列表，最多支持5个，最少2个关键词组合
     * @param sceneDesc 服务场景描述，15个字以内
     */
    static addTemplate(tid, kidList, sceneDesc) {
        return __awaiter(this, void 0, void 0, function* () {
            commons_1.ComSubscribeMsgApi.addTemplate(tid, kidList, sceneDesc);
        });
    }
    /**
     * 删除帐号下的个人模板
     * @param priTmplId 要删除的模板id
     */
    static delTemplate(priTmplId) {
        return __awaiter(this, void 0, void 0, function* () {
            commons_1.ComSubscribeMsgApi.delTemplate(priTmplId);
        });
    }
    /**
     * 获取小程序账号的类目
     */
    static getCategory() {
        return __awaiter(this, void 0, void 0, function* () {
            commons_1.ComSubscribeMsgApi.getCategory();
        });
    }
    /**
     * 获取模板标题下的关键词列表
     * @param tid 模板标题 id
     */
    static getPubTemplateKeyWords(tid) {
        return __awaiter(this, void 0, void 0, function* () {
            commons_1.ComSubscribeMsgApi.getPubTemplateKeyWords(tid);
        });
    }
    /**
     * 获取帐号所属类目下的公共模板标题
     * @param ids 类目 id
     * @param start 用于分页，表示从 start 开始。从 0 开始计数。
     * @param limit 用于分页，表示拉取 limit 条记录。最大为 30。
     */
    static getPubTemplateTitles(ids, start = 0, limit = 30) {
        return __awaiter(this, void 0, void 0, function* () {
            commons_1.ComSubscribeMsgApi.getPubTemplateTitles(ids, start, limit);
        });
    }
    /**
     * 获取当前帐号下的个人模板列表
     */
    static getTemplate() {
        return __awaiter(this, void 0, void 0, function* () {
            commons_1.ComSubscribeMsgApi.getTemplate();
        });
    }
    /**
     * 发送订阅消息
     * @param touser 接收者（用户）的 openid
     * @param templateId 所需下发的订阅模板id
     * @param data 模板内容，格式形如 { "key1": { "value": any }, "key2": { "value": any } }
     * @param miniprogramState 跳转小程序类型：developer为开发版；trial为体验版；formal为正式版；默认为正式版
     * @param lang 进入小程序查看的语言类型，支持zh_CN(简体中文)、en_US(英文)、zh_HK(繁体中文)、zh_TW(繁体中文)，默认为zh_CN
     * @param page 点击模板卡片后的跳转页面
     */
    static sendSubMessage(touser, templateId, data, miniprogramState = 'formal', lang = 'zh_CN', page) {
        return __awaiter(this, void 0, void 0, function* () {
            let accessToken = yield accesstoken_1.AccessTokenApi.getAccessToken();
            let url = util.format(this.sendMessageUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                touser: touser,
                template_id: templateId,
                page: page,
                miniprogram_state: miniprogramState,
                lang: lang,
                data: data
            }));
        });
    }
}
exports.MiniSubscribeMsgApi = MiniSubscribeMsgApi;
MiniSubscribeMsgApi.sendMessageUrl = 'https://api.weixin.qq.com/cgi-bin/message/subscribe/send?access_token=%s';
//# sourceMappingURL=MiniSubscribeMsgApi.js.map