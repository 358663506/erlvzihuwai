"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const kits_1 = require("@tnwx/kits");
const accesstoken_1 = require("@tnwx/accesstoken");
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 企业微信 API 接口
 */
class QyWxApi {
    /**
     * 更新任务卡片消息状态
     * @param userIds 企业的成员ID列表（消息接收者，最多支持1000个）
     * @param agentId 应用的 agentId
     * @param taskId 发送任务卡片消息时指定的 taskId
     * @param clickedKey 设置指定的按钮为选择状态，需要与发送消息时指定的btn:key一致
     * @param accessToken AccessToken
     */
    static updateTaskCard(userIds, agentId, taskId, clickedKey, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            }
            let url = util.format(this.updateTaskCardUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                userids: userIds,
                agentid: agentId,
                task_id: taskId,
                clicked_key: clickedKey
            }));
        });
    }
    /**
     * 获取企业微信API域名IP段
     */
    static getApiDomainIp(accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            }
            let url = util.format(this.getApiDomainIpUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpGet(url);
        });
    }
}
exports.QyWxApi = QyWxApi;
QyWxApi.updateTaskCardUrl = 'https://qyapi.weixin.qq.com/cgi-bin/message/update_taskcard?access_token=%s';
QyWxApi.getApiDomainIpUrl = 'https://qyapi.weixin.qq.com/cgi-bin/get_api_domain_ip?access_token=%s';
//# sourceMappingURL=QyWxApi.js.map