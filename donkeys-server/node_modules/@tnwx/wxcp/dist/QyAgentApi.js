"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const kits_1 = require("@tnwx/kits");
const accesstoken_1 = require("@tnwx/accesstoken");
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 应用管理
 */
class QyAgentApi {
    /**
     * 获取指定的应用详情
     * @param agentId 应用id
     * @param accessToken AccessToken
     */
    static getAgent(agentId, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            }
            let url = util.format(this.getAgentUrl, accessToken.getAccessToken, agentId);
            return kits_1.HttpKit.getHttpDelegate.httpGet(url);
        });
    }
    /**
     * 获取access_token对应的应用列表
     * @param accessToken AccessToken
     */
    static getAgentList(accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            }
            let url = util.format(this.getAgentListUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpGet(url);
        });
    }
    /**
     * 设置应用
     * @param agentId 企业应用的id
     * @param name 企业应用名称，长度不超过32个utf8字符
     * @param description 企业应用详情，长度为4至120个utf8字符
     * @param redirectDomain 企业应用可信域名
     * @param isreportenter 是否上报用户进入应用事件。0：不接收；1：接收
     * @param reportLocationFlag 企业应用是否打开地理位置上报 0：不上报；1：进入会话上报
     * @param logoMediaid 企业应用头像的mediaid
     * @param homeUrl 应用主页url
     */
    static setAgent(agentId, name, description, redirectDomain, isreportenter = 0, reportLocationFlag = 0, logoMediaid, homeUrl) {
        return __awaiter(this, void 0, void 0, function* () {
            let accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            let url = util.format(this.setAgentUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                agentid: agentId,
                name: name,
                description: description,
                logo_mediaid: logoMediaid,
                report_location_flag: reportLocationFlag,
                redirect_domain: redirectDomain,
                isreportenter: isreportenter,
                home_url: homeUrl
            }));
        });
    }
    /**
     * 创建菜单
     * @param agentId 应用id
     * @param jsonData 请求数据
     */
    static createMenu(agentId, jsonData) {
        return __awaiter(this, void 0, void 0, function* () {
            let accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            let url = util.format(this.createUrl, accessToken.getAccessToken, agentId);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, jsonData);
        });
    }
    /**
     * 获取菜单
     * @param agentId 应用id
     */
    static getMenu(agentId) {
        return __awaiter(this, void 0, void 0, function* () {
            let accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            let url = util.format(this.getUrl, accessToken.getAccessToken, agentId);
            return kits_1.HttpKit.getHttpDelegate.httpGet(url);
        });
    }
    /**
     * 删除菜单
     * @param agentId 应用id
     */
    static deleteMenu(agentId) {
        return __awaiter(this, void 0, void 0, function* () {
            let accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            let url = util.format(this.deleteUrl, accessToken.getAccessToken, agentId);
            return kits_1.HttpKit.getHttpDelegate.httpGet(url);
        });
    }
}
exports.QyAgentApi = QyAgentApi;
QyAgentApi.getAgentUrl = 'https://qyapi.weixin.qq.com/cgi-bin/agent/get?access_token=%s&agentid=%s';
QyAgentApi.getAgentListUrl = 'https://qyapi.weixin.qq.com/cgi-bin/agent/list?access_token=%s';
QyAgentApi.setAgentUrl = 'https://qyapi.weixin.qq.com/cgi-bin/agent/set?access_token=%s';
QyAgentApi.createUrl = 'https://qyapi.weixin.qq.com/cgi-bin/menu/create?access_token=%s&agentid=%s';
QyAgentApi.getUrl = 'https://qyapi.weixin.qq.com/cgi-bin/menu/get?access_token=%s&agentid=%s';
QyAgentApi.deleteUrl = 'https://qyapi.weixin.qq.com/cgi-bin/menu/delete?access_token=%s&agentid=%s';
//# sourceMappingURL=QyAgentApi.js.map