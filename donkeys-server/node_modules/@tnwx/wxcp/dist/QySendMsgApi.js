"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const kits_1 = require("@tnwx/kits");
const accesstoken_1 = require("@tnwx/accesstoken");
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 主动发送消息
 */
class QySendMsgApi {
    /**
     * 查询应用消息发送统计
     * @param timeType 查询哪天的数据，0：当天；1：昨天。默认为0
     */
    static getTatistics(timeType = 0) {
        return __awaiter(this, void 0, void 0, function* () {
            let accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            let url = util.format(this.getStatisticsUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, JSON.stringify({
                time_type: timeType
            }));
        });
    }
    /**
     * 发送应用消息
     * @param {string} jsonStr
     * @param accessToken
     */
    static sendMessage(jsonStr, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!accessToken) {
                accessToken = yield accesstoken_1.QyAccessTokenApi.getAccessToken();
            }
            let url = util.format(this.sendMessageUrl, accessToken.getAccessToken);
            return kits_1.HttpKit.getHttpDelegate.httpPost(url, jsonStr);
        });
    }
    /**
     * 发送文本消息
     * @param {QyTextMsg} text
     * @param accessToken
     */
    static sendTextMessage(text, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(text), accessToken);
        });
    }
    /**
     * 发送图片消息
     * @param {QyImageMsg} image
     * @param accessToken
     */
    static sendImageMessage(image, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(image), accessToken);
        });
    }
    /**
     * 发送语音消息
     * @param voice
     * @param accessToken
     */
    static sendVoiceMessage(voice, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(voice), accessToken);
        });
    }
    /**
     * 发送视频消息
     * @param video
     * @param accessToken
     */
    static sendVideoMessage(video, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(video), accessToken);
        });
    }
    /**
     * 发送文件消息
     * @param file
     * @param accessToken
     */
    static sendFileMessage(file, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(file), accessToken);
        });
    }
    /**
     * 文本卡片消息
     * @param textCard
     * @param accessToken
     */
    static sendTextCardMessage(textCard, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(textCard), accessToken);
        });
    }
    /**
     * 图文消息
     * @param news
     * @param accessToken
     */
    static sendNewsMessage(news, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(news), accessToken);
        });
    }
    /**
     * 图文消息
     * @param mpnews
     * @param accessToken
     */
    static sendMpNewsMessage(mpnews, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(mpnews), accessToken);
        });
    }
    /**
     * markdown 消息
     * @param markdown
     * @param accessToken
     */
    static sendMarkDownMessage(markdown, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(markdown), accessToken);
        });
    }
    /**
     * 小程序通知消息
     * @param miniprogramNotice
     * @param accessToken
     */
    static sendMiniprogramNoticeMessage(miniprogramNotice, accessToken) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(miniprogramNotice), accessToken);
        });
    }
    /**
     * 任务卡片消息
     * @param taskCard
     */
    static sendTaskCardMessage(taskCard) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.sendMessage(JSON.stringify(taskCard));
        });
    }
}
exports.QySendMsgApi = QySendMsgApi;
QySendMsgApi.getStatisticsUrl = 'https://qyapi.weixin.qq.com/cgi-bin/message/get_statistics?access_token=%s';
QySendMsgApi.sendMessageUrl = 'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=%s';
var QySendMessageType;
(function (QySendMessageType) {
    QySendMessageType["TEXT"] = "text";
    QySendMessageType["IMAGE"] = "image";
    QySendMessageType["VOICE"] = "voice";
    QySendMessageType["VIDEO"] = "video";
    QySendMessageType["FILE"] = "file";
    QySendMessageType["TEXTCARD"] = "textcard";
    QySendMessageType["NEWS"] = "news";
    QySendMessageType["MPNEWS"] = "mpnews";
    QySendMessageType["MARKDOWN"] = "markdown";
    QySendMessageType["MINIPROGRAM_NOTICE"] = "miniprogram_notice";
    QySendMessageType["TASKCARD"] = "taskcard";
})(QySendMessageType = exports.QySendMessageType || (exports.QySendMessageType = {}));
//# sourceMappingURL=QySendMsgApi.js.map