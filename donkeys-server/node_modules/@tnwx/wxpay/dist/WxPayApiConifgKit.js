"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cache_1 = require("@tnwx/cache");
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 微信支付常用配置 Kit
 */
class WxPayApiConifgKit {
    set devMode(devMode) {
        this.devMode = devMode;
    }
    static isDevMode() {
        return this.devMode;
    }
    static putConfig(config) {
        if (this.CFG_MAP.size == 0) {
            this.CFG_MAP.set(this.DEFAULT_CFG_KEY, config);
        }
        return this.CFG_MAP.set(config.appId, config);
    }
    static removeConfigByConfig(config) {
        return this.removeConfig(config.appId);
    }
    static removeConfig(appId) {
        return this.CFG_MAP.delete(appId);
    }
    static setCurrentAppId(appId) {
        if (appId) {
            this.currentAppId = appId;
        }
        else {
            let config = this.CFG_MAP.get(this.DEFAULT_CFG_KEY);
            if (config) {
                appId = config.appId;
                this.currentAppId = appId;
            }
        }
    }
    static removeCurrentAppId() {
        this.currentAppId = '';
    }
    static get getAppId() {
        let appId = this.currentAppId;
        if (!appId) {
            let config = this.CFG_MAP.get(this.DEFAULT_CFG_KEY);
            if (config) {
                appId = config.appId;
            }
        }
        return appId;
    }
    static get getConfig() {
        return this.getConfigByAppId(this.currentAppId);
    }
    static getConfigByAppId(appId) {
        if (this.isDevMode) {
            console.debug(`getConfigByAppId appId: ${appId}`);
        }
        let cfg = this.CFG_MAP.get(appId);
        if (!cfg) {
            throw new Error('需事先调用 WxPayApiConfigKit.putConfig(config) 将 appId 对应的 config 对象存入后,才可以使用 WxPayApiConfigKit.getConfig 系列方法');
        }
        return cfg;
    }
    static get getCache() {
        return this._cache;
    }
    static set setCache(cache) {
        this._cache = cache;
    }
}
exports.WxPayApiConifgKit = WxPayApiConifgKit;
WxPayApiConifgKit.CFG_MAP = new Map();
WxPayApiConifgKit.DEFAULT_CFG_KEY = '_default_cfg_key_';
WxPayApiConifgKit.devMode = false;
WxPayApiConifgKit._cache = new cache_1.DefaultCache();
//# sourceMappingURL=WxPayApiConifgKit.js.map