/// <reference types="node" />
import { SIGN_TYPE } from '@tnwx/kits';
/**
 * @author Javen
 * @copyright javendev@126.com
 * @description 微信支付
 */
export declare class WxPay {
    /**
     * 获取沙箱环境验签秘钥
     * @param mchId  商户号
     * @param key api 密钥
     * @param signType 签名类型 默认为 MD5 加密
     */
    static getSignKey(mchId: string, key: string, signType?: SIGN_TYPE): Promise<any>;
    /**
     * 判断异步通知中的 sign 是否有效
     * @param notifyData 通知中的数据对象
     * @param key api 密钥
     */
    static notifySignatureValid(notifyData: any, key: string): boolean;
    /**
     * 验证签名
     * @param data 通知中的数据对象
     * @param key api 密钥
     * @param signType 签名类型
     */
    static isSignatureValid(data: any, key: string, signType: SIGN_TYPE): boolean;
    /**
     * 公众号支付/小程序-预付订单再次签名,注意此处签名方式需与统一下单的签名类型一致
     * @param prepayId  预付订单号
     * @param appId     应用编号
     * @param apiKey    API Key
     * @param signType  签名方式
     */
    static prepayIdCreateSign(prepayId: string, appId: string, apiKey: string, signType?: SIGN_TYPE): Object;
    /**
     * APP 支付-预付订单再次签名,注意此处签名方式需与统一下单的签名类型一致
     * @param prepayId  预付订单号
     * @param appId     应用编号
     * @param partnerId 商户号
     * @param apiKey    API Key
     * @param signType  签名方式
     */
    static appPrepayIdCreateSign(prepayId: string, appId: string, partnerId: string, apiKey: string, signType?: SIGN_TYPE): Object;
    /**
     * 微信支付v3 创建签名
     *
     * @param {Array<string>} unSignArray 待签名参数数组
     * @param {Buffer} key key.pem 证书
     * @returns {string}  签名字符串
     */
    static createSign(unSignArray: Array<string>, key: Buffer): string;
}
